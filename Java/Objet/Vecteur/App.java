/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package algo;

import java.util.Arrays;
import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        
        double x1, y1;

        System.out.println("Entrez X");
        x1 = scan.nextDouble();
        System.out.println("Entrez Y");
        y1 = scan.nextDouble();

        Vecteur2 v = new Vecteur2(x1, y1);
        System.out.println("La magnitude du vecteur est "+v.magnitude());

        scan.close();
    }

    public static void exercice7_1(){
        //int[] tab = {12, 13, 14, 15, 16, 17};
        int[] tab = {9, 10, 11, 15, 16, 17};

        boolean cons = true;

        for(int i = 1; i < tab.length; i++){
            if(tab[i - 1] != (tab[i] - 1))
                cons = false;
        }
        
        if(cons)
            System.out.println("Tableau consécutif !");
        else
            System.out.println("Tableau non consécutif");

    }

    public static void exercice7_2(){
        int[] tab = {8, 4, 16, 42, 23, 1};
        // Select Sort
        for(int i = 0; i < tab.length - 1; i++){
            for(int j = i + 1; j < tab.length; j++){
                if(tab[i] > tab[j]){
                    int c = tab[i];
                    tab[i] = tab[j];
                    tab[j] = c;
                }
            }
        }
        System.out.println(Arrays.toString(tab));
    }

    public static void exercice7_2_1(){
        int[] tab = {8, 4, 16, 42, 23, 1};
        // Bubble sort
        boolean inverse = true;
        while(inverse){
            inverse = false;

            for(int i = 0; i < tab.length - 1; i++){
                if(tab[i] < tab[i+1]){
                    int c = tab[i];
                    tab[i] = tab[i+1];
                    tab[i+1] = c;
                    inverse = true;
                }
            }
        }
        System.out.println(Arrays.toString(tab));

    }

    public static void exercice7_3(){
        int[] tab = {8, 4, 16, 42, 23};

        int max = tab.length / 2;

        for(int i = 0; i < max; i++){
            int c = tab[i];
            tab[i] = tab[tab.length - 1 - i];
            tab[tab.length - 1 - i] = c;
        }
        System.out.println(Arrays.toString(tab));
    }

    public static void exercice7_4(){
        Scanner scan = new Scanner(System.in);
        int[] tab = {12, 8, 4, 45, 64, 9, 2};

        System.out.println("Quel est l'index à supprimer ? entre 0 et "+(tab.length-1));
        int indexToRemove = scan.nextInt();

        int[] tmpTab = new int[tab.length - 1];
        int j = 0;
        for(int i = 0; i < tab.length; i++){
            if(i != indexToRemove){
                tmpTab[j] = tab[i];
                j++;
            }
        }

        tab = tmpTab;
        System.out.println(Arrays.toString(tab));
        scan.close();
    }

    public static void exercice7_5(){
        String[] dico = {"Coucou", "Toto", "Tata", "Titi", "Hello"};
        Scanner scan = new Scanner(System.in);
        System.out.println("Entrez un mot à rechercher");
        String recherche = scan.next();

        for(int i = 0; i < dico.length; i++){
            if(recherche.compareTo(dico[i]) == 0){
                System.out.println("Trouvé ! a l'index "+i);
            }
        }
    }

    public static void exercice7_6(){
        int[] tab1 = {1,3, 3, 5, 7, 9, 11};
        int[] tab2 = {2, 2, 4, 6};
        int[] tab3 = new int[tab1.length + tab2.length];
        int j = 0, k = 0;

        for(int i = 0; i < tab3.length; i++){
            if(j < tab1.length && (k >= tab2.length || tab1[j] < tab2[k]) ){
                tab3[i] = tab1[j];
                j++;
            }
            else{
                tab3[i] = tab2[k];
                k++;
            }
        }
        System.out.println(Arrays.toString(tab3));
    }
}
 